// Generated by CoffeeScript 1.9.0
(function() {
  var ECpageClass,
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  ECpageClass = (function() {
    var root;

    root = {};

    ECpageClass.prototype._page_name = "";

    ECpageClass.prototype._item_info = {};

    ECpageClass.prototype._platform = "";

    ECpageClass.prototype._option_course_states = {
      1: "当前课程",
      2: "已结束",
      3: "已暂停",
      4: "已删除",
      5: "已取消课程"
    };

    ECpageClass.prototype._listview_data = {
      pullable: false,
      hasFooterDivider: false,
      hasHeaderDivider: false,
      dividerHeight: 0,
      dividerColor: "#cccccc",
      data: [
        {
          viewType: "ListViewCellLine",
          _rightLayoutSize: 0,
          _leftLayoutSize: 60,
          centerTitle: "正在加载......"
        }
      ]
    };

    ECpageClass.prototype._constructor = function(_at__page_name) {
      this._page_name = _at__page_name;
      root = this;
      this.prepareForInitView();
      $A().page().widget(this._page_name + "_ListViewBase_0").data(JSON.stringify(this._listview_data));
      $A().page().widget(this._page_name + "_ListViewBase_0").onItemInnerClick(function(data) {
        return root.onItemInnerClick(data);
      });
      $A().page().widget(this._page_name + "_ListViewBase_0").onItemClick(function(data) {
        return root.onItemClick(data);
      });
      return $A().page().onCreated(function() {
        return root.onCreated();
      });
    };

    function ECpageClass(_page_name) {
      this._constructor(_page_name);
    }

    ECpageClass.prototype.onCreated = function() {
      if ((root._platform != null) && root._platform === "ios") {
        $A().page().widget(this._page_name + "_ListViewBase_0").refreshData(JSON.stringify(this._listview_data));
      }
      return root.getNetResource();
    };

    ECpageClass.prototype.onItemClick = function(data) {
      var item;
      item = this._listview_data.data[data.position];
      if (item._type === "_item") {
        if (parseInt(item.course_state) === 1) {
          $A().app().openPage({
            page_name: "page_course_info",
            params: {
              info: JSON.stringify(this._listview_data.data[data.position].item)
            },
            close_option: ""
          });
        }
        if (parseInt(item.course_state) === 5) {
          $A().app().showConfirm({
            title: "是否再次添加此课程",
            ok: "添加",
            cancel: "取消",
            message: item.item.course_info.title
          }).then(function(data) {
            if (data.state === "ok") {
              return root.favCourse(item.item.course_info.code, item.item.course_info.id);
            }
          });
        }
        return "_false";
      }
    };

    ECpageClass.prototype.onItemInnerClick = function(data) {
      var item;
      item = this._listview_data.data[data.position];
      if ((item._type != null) && item._type === "back") {
        return $A().app().closePage();
      }
    };

    ECpageClass.prototype.onResume = function() {};

    ECpageClass.prototype.prepareForInitView = function() {
      return $A().app().platform().then(function(platform) {
        return root._platform = platform;
      });
    };

    ECpageClass.prototype.getNetResource = function() {
      root._listview_data.data = [];
      return $A().app().callApi({
        method: "users/courses",
        cacheTime: 0
      }).then(function(res) {
        var group, groups, i, item, key, listdata, _i, _j, _len, _len1, _ref;
        groups = {
          1: [],
          2: [],
          3: [],
          4: [],
          5: []
        };
        _ref = res.items;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          item = _ref[_i];
          groups[item.state].push(item);
        }
        for (key in groups) {
          group = groups[key];
          if (group.length > 0) {
            root._listview_data.data.push({
              viewType: "ListViewCellGroupTitle",
              textTitle: root._option_course_states[key],
              color: "#5793ff",
              _type: "_title"
            });
            for (i = _j = 0, _len1 = group.length; _j < _len1; i = ++_j) {
              item = group[i];
              listdata = {
                viewType: "ListViewCellLine",
                _rightLayoutSize: 0,
                _leftLayoutSize: 0,
                _bottomDivider: {
                  imageType: "assets",
                  imageSize: "fitSize",
                  imageSrc: "webview/images/icon/default/divider.png"
                },
                rightImage: {
                  imageType: "assets",
                  imageSize: "fitSize",
                  imageSrc: "webview/images/icon/default/listview_right.png"
                },
                centerTitle: "" + item.course_info.title,
                centerBottomdes2: "" + item.course_info.content,
                _centerBottomdes2Color: {
                  _clickable: false,
                  pressed: "#999999",
                  selected: "#999999",
                  normal: "#999999"
                },
                item: item,
                _type: "_item",
                course_state: key,
                hasFooterDivider: "true"
              };
              root._listview_data.data.push(listdata);
            }
          }
        }
        root._listview_data.data.push({
          viewType: "ListViewCellButton",
          btnTitle: "返 回",
          btnType: "cancel",
          _type: "back"
        });
        return $A().page().widget(root._page_name + "_ListViewBase_0").refreshData(JSON.stringify(root._listview_data));
      });
    };

    ECpageClass.prototype.favCourse = function(course_code, itemId) {
      $A().app().showLoadingDialog({
        content: "正在添加课程,请稍候"
      });
      return $A().app().callApi({
        method: "users/courses/create",
        course_id: itemId,
        cacheTime: 0
      }).then(function(res) {
        if (res.errors != null) {
          $A().app().closeLoadingDialog();
          if (res.errors === "没有网络") {
            $A().app().makeToast("没有网络");
            return;
          }
          if ((res.errors[0].error_num != null) && ("" + res.errors[0].error_num) === "100000") {
            $A().app().makeToast("网络状态不好，请重试");
            return;
          }
          if ((res.errors[0].error_num != null) && ("" + res.errors[0].error_num) === "301101") {
            $A().app().makeToast("你已添加过该课程，不能重复添加。");
            return;
          }
        }
        $A().app().showLoadingDialog({
          content: "课程添加成功"
        });
        return $A().page().setTimeout("2000").then(function() {
          $A().page("page_home").param({
            key: "_setting_changed",
            value: "true"
          });
          $A().app().showLoadingDialog({
            content: "正在导入课程数据,请稍候"
          });
          return root.addCourseBycourseCode(course_code).then(function(data) {
            $A().app().closeLoadingDialog();
            if (data === "_false") {
              $A().app().makeToast("网络状态不好，请重试");
            }
            if (data === "_true") {
              return $A().page().setTimeout("1000").then(function() {
                $A().lrucache().set({
                  key: "download_all_courses",
                  value: "true"
                });
                return $A().app().showConfirm({
                  title: "请自行修改时间设置",
                  ok: "我 知 道 了",
                  message: "我们已经为课程设置了默认时间。为了更好地查看课程内容，请根据你自己的具体情况修改时间设置。"
                }).then(function(data) {
                  $A().app().makeToast("正在返回首页请稍后");
                  return $A().page().setTimeout("1000").then(function() {
                    return $A().app().openPage({
                      page_name: "page_home",
                      params: {},
                      close_option: "close"
                    });
                  });
                });
              });
            }
          });
        });
      });
    };

    ECpageClass.prototype.addCourseBycourseCode = function(course_code) {
      var column_data, column_types;
      column_data = {};
      column_types = [];
      return $A().app().callApi({
        method: "courses/package",
        course_code: course_code,
        cacheTime: 0
      }).then(function(res) {
        var column_types_with_id, course_id, course_id_index_arr, fav_id, i, item, item_column_types, j, k_day_time, key_day_time, v_day_time, value_day_time, _i, _j, _len, _len1, _ref, _ref1, _ref2, _ref3;
        if ((res.errors != null) && (res.errors.error_num != null) && res.errors.error_num === "100000") {
          $A().app().makeToast("网络状态不好，请重试");
          return "_false";
        }
        if ((res.errors != null) && res.errors === "没有网络") {
          $A().app().makeToast("请开启网络");
          return "_false";
        }
        fav_id = res.detail.fav_id;
        course_id = res.detail.id;
        course_id_index_arr = [];
        _ref = res.contents;
        for (key_day_time in _ref) {
          value_day_time = _ref[key_day_time];
          course_id_index_arr.push("" + key_day_time);
        }
        $A().lrucache().get("fav_id_arr").then(function(data) {
          var fav_id_arr;
          fav_id_arr = {};
          fav_id_arr = (data != null) && data !== "" ? JSON.parse(data) : {};
          fav_id_arr[fav_id] = {
            info: res.detail,
            index: course_id_index_arr
          };
          return $A().lrucache().set({
            key: "fav_id_arr",
            value: JSON.stringify(fav_id_arr)
          });
        });
        _ref1 = res.contents;
        for (k_day_time in _ref1) {
          v_day_time = _ref1[k_day_time];
          $A().lrucache().set({
            key: "" + k_day_time,
            value: JSON.stringify(v_day_time)
          });
        }
        _ref2 = res.contents;
        for (k_day_time in _ref2) {
          v_day_time = _ref2[k_day_time];
          for (i = _i = 0, _len = v_day_time.length; _i < _len; i = ++_i) {
            item = v_day_time[i];
            if ((item.item_colum != null) && item.item_colum !== "") {
              item["day_offset"] = k_day_time.substr(k_day_time.lastIndexOf("_") + 1);
              item["day_name"] = res.detail[k_day_time.substring(k_day_time.indexOf("_") + 1, k_day_time.lastIndexOf("_"))];
              if (!(_ref3 = item.item_colum, __indexOf.call(column_types, _ref3) >= 0)) {
                column_types.push(item.item_colum);
                column_data["" + item.item_colum] = [];
              }
              column_data["" + item.item_colum].push(item);
            }
          }
        }
        column_types_with_id = [];
        for (j = _j = 0, _len1 = column_types.length; _j < _len1; j = ++_j) {
          item_column_types = column_types[j];
          column_types_with_id.push({
            key: "" + j,
            value: "" + item_column_types
          });
          $A().lrucache().set({
            key: "column_" + j + "_" + fav_id,
            value: JSON.stringify(column_data["" + item_column_types])
          });
        }
        $A().lrucache().get("column_arr").then(function(data) {
          var column_arr;
          column_arr = {};
          column_arr = (data != null) && data !== "" ? JSON.parse(data) : {};
          column_arr[fav_id] = column_types_with_id;
          return $A().lrucache().set({
            key: "column_arr",
            value: JSON.stringify(column_arr)
          });
        });
        $A().lrucache().set({
          key: "download_all_courses",
          value: "true"
        });
        return "_true";
      });
    };

    return ECpageClass;

  })();

  new ECpageClass("page_course_list");

}).call(this);
