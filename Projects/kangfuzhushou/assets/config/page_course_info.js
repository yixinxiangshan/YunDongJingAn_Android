// Generated by CoffeeScript 1.9.1
(function() {
  var ECpageClass;

  ECpageClass = (function() {
    var root;

    root = {};

    ECpageClass.prototype._page_name = "";

    ECpageClass.prototype._content_info = {};

    ECpageClass.prototype._platform = "";

    ECpageClass.prototype._listview_data = {
      pullable: false,
      hasFooterDivider: true,
      hasHeaderDivider: true,
      dividerHeight: 0,
      dividerColor: "#EBEBEB",
      data: [
        {
          viewType: "ListViewCellLine",
          _rightLayoutSize: 0,
          _leftLayoutSize: 60,
          centerTitle: "正在加载......"
        }
      ]
    };

    ECpageClass.prototype._constructor = function(_page_name1) {
      this._page_name = _page_name1;
      root = this;
      this.prepareForInitView();
      $A().page().widget(this._page_name + "_ListViewBase_0").data(JSON.stringify(this._listview_data));
      $A().page().widget(this._page_name + "_ListViewBase_0").onItemInnerClick(function(data) {
        return root.onItemInnerClick(data);
      });
      $A().page().widget(this._page_name + "_ListViewBase_0").onItemClick(function(data) {
        return root.onItemClick(data);
      });
      return $A().page().onCreated(function() {
        return root.onCreated();
      });
    };

    function ECpageClass(_page_name) {
      this._constructor(_page_name);
    }

    ECpageClass.prototype.onCreated = function() {
      if ((root._platform != null) && root._platform === "ios") {
        $A().page().widget(this._page_name + "_ListViewBase_0").refreshData(JSON.stringify(this._listview_data));
      }
      return root.showArticle(root._content_info);
    };

    ECpageClass.prototype.onItemClick = function(data) {
      var item, position;
      item = root._listview_data.data[data.position];
      position = data.position;
      if ((root._listview_data.data[data.position]._type != null) && root._listview_data.data[data.position]._type === "_item") {
        return $A().app().showDatepickerConfirm({
          ok: "确定",
          cancel: "取消",
          defaultDay: item.item_setting.time_content != null ? item.rightDes : item.item_setting.suggest_date,
          title: root._listview_data.data[data.position].centerTitle
        }).then(function(data) {
          var date_time;
          if (data.state === "ok") {
            $A().page("page_home").param({
              key: "_setting_changed",
              value: "true"
            });
            date_time = data.value;
            return $A().app().callApi({
              method: "users/courses/set_day",
              fav_id: item.item_setting.fav_id,
              day_type: item.item_setting.day_type,
              date_time: date_time,
              cacheTime: 0
            }).then(function(data) {
              var day_type;
              if ((data != null) && (data.success != null) && data.success === true) {
                day_type = "" + item.item_setting.day_type;
                $A().lrucache().get("fav_id_arr").then(function(data) {
                  var fav_id_arr;
                  fav_id_arr = {};
                  fav_id_arr = (data != null) && data !== "" ? JSON.parse(data) : {};
                  fav_id_arr["" + item.item_setting.fav_id].info["" + day_type] = date_time;
                  return $A().lrucache().set({
                    key: "fav_id_arr",
                    value: JSON.stringify(fav_id_arr)
                  });
                });
                root._listview_data.data[position].rightDes = date_time;
                return $A().page().widget("page_course_time_choose_ListViewBase_0").refreshData(JSON.stringify(root._listview_data));
              } else if ((data != null) && (data.errors != null) && data.errors === "没有网络") {
                return $A().app().makeToast("请打开网络,然后再设置或更改时间。");
              } else {
                return $A().app().makeToast("网络环境不好，请重试！");
              }
            });
          }
        });
      }
    };

    ECpageClass.prototype.onItemInnerClick = function(data) {
      if (root._listview_data.data[data.position]._type === "_cancel") {
        return $A().app().showConfirm({
          ok: "确定",
          title: "取消课程",
          cancel: "我再想想",
          message: "取消课程后,课程内容将无法显示。如需查看，请再次添加。"
        }).then(function(data) {
          if (data.state === "ok") {
            $A().app().showLoadingDialog({
              content: "正在取消课程..."
            });
            $A().app().callApi({
              method: "users/courses/cancel",
              fav_id: root._content_info.id,
              cacheTime: 0
            }).then(function(res) {
              $A().app().showLoadingDialog({
                content: "取消成功"
              });
              $A().page("page_home").param({
                key: "_setting_changed",
                value: "true"
              });
              root.deleteCourseByFavId(root._content_info.id);
              $A().app().closeLoadingDialog();
              return $A().page().setTimeout("2000").then(function() {
                return $A().app().closePage();
              });
            });
            return "_false";
          }
        });
      }
    };

    ECpageClass.prototype.onResume = function() {};

    ECpageClass.prototype.onResult = function(data) {};

    ECpageClass.prototype.prepareForInitView = function() {
      $A().app().platform().then(function(platform) {
        return root._platform = platform;
      });
      return $A().page().param("info").then(function(data) {
        var reg;
        reg = new RegExp("\r\n", "g");
        root._content_info = JSON.parse(data.replace(reg, "\\r\\n"));
        return $A().page().widget("ActionBar").title({
          title: root._content_info.course_info.title
        });
      });
    };

    ECpageClass.prototype.showArticle = function(info) {
      var i, j, len, ref, time;
      root._listview_data.data = [
        {
          viewType: "ListViewCellGroupTitle",
          textTitle: "",
          _type: "_split"
        }, {
          viewType: "ListViewCellLine",
          _rightLayoutSize: 0,
          _leftLayoutSize: 80,
          _bottomDivider: {
            imageType: "assets",
            imageSize: "fitSize",
            imageSrc: "webview/images/icon/default/divider.png"
          },
          leftImage: {
            imageType: "imageServer",
            imageSize: "middle",
            imageSrc: info.course_info.image_cover.url
          },
          centerTitle: info.course_info.title,
          hasFooterDivider: "true"
        }
      ];
      ref = info.set_times;
      for (i = j = 0, len = ref.length; j < len; i = ++j) {
        time = ref[i];
        root._listview_data.data.push({
          viewType: "ListViewCellLine",
          _rightLayoutSize: 0,
          _leftLayoutSize: 20,
          _bottomDivider: {
            imageType: "assets",
            imageSize: "fitSize",
            imageSrc: "webview/images/icon/default/divider.png"
          },
          rightImage: {
            imageType: "assets",
            imageSize: "micro",
            imageSrc: "webview/images/icon/default/listview_right.png"
          },
          centerTitle: time.time_name + "时间",
          rightDes: time.content != null ? time.content : "未设置",
          item_setting: {
            fav_id: info.id,
            course_title: info.course_info.title,
            day_type: time.time_type,
            name: time.time_name,
            time_content: time.content
          },
          _type: "_item",
          hasFooterDivider: "true"
        });
      }
      root._listview_data.data.push({
        viewType: "ListViewCellGroupTitle",
        textTitle: "",
        _type: "_split"
      });
      root._listview_data.data.push({
        viewType: "ListViewCellLine",
        _rightLayoutSize: 0,
        _leftLayoutSize: 0,
        _bottomDivider: {
          imageType: "assets",
          imageSize: "fitSize",
          imageSrc: "webview/images/icon/default/divider.png"
        },
        centerBottomdes2: info.course_info.content,
        _centerBottomdes2Color: {
          _clickable: false,
          pressed: "#999999",
          selected: "#999999",
          normal: "#999999"
        },
        hasFooterDivider: "false"
      });
      root._listview_data.data.push({
        viewType: "ListViewCellButton",
        btnTitle: "取 消 课 程",
        btnType: "cancel",
        _type: "_cancel"
      });
      return $A().page().widget(root._page_name + "_ListViewBase_0").refreshData(JSON.stringify(root._listview_data));
    };

    ECpageClass.prototype.deleteCourseByFavId = function(fav_id) {
      $A().notification().clear();
      $A().lrucache().set({
        key: "has_add_notifications",
        value: "false"
      });
      $A().lrucache().remove("local_notifications");
      $A().lrucache().get("update_all").then(function(data) {
        var j, len, update_all, update_all_temp, update_item;
        update_all = [];
        update_all_temp = [];
        if ((data != null) && data !== "") {
          update_all = JSON.parse(data);
        }
        for (j = 0, len = update_all.length; j < len; j++) {
          update_item = update_all[j];
          if ((update_item.fav_id != null) && ("" + update_item.fav_id) !== ("" + fav_id)) {
            update_all_temp.push(update_item);
          }
        }
        return $A().lrucache().set({
          key: "update_all",
          value: update_all_temp
        });
      });
      return $A().lrucache().get("fav_id_arr").then(function(data) {
        var all_fav_id_ids, fav_id_arr, k_fav_id, v_fav_id;
        fav_id_arr = {};
        all_fav_id_ids = [];
        fav_id_arr = (data != null) && data !== "" ? JSON.parse(data) : {};
        for (k_fav_id in fav_id_arr) {
          v_fav_id = fav_id_arr[k_fav_id];
          if (("" + k_fav_id) === ("" + fav_id)) {
            $A().lrucache().massGet(JSON.stringify(v_fav_id["index"])).then(function(res) {
              var i, item, j, len, resk, resv;
              for (resk in res) {
                resv = res[resk];
                resv = JSON.parse(resv);
                for (i = j = 0, len = resv.length; j < len; i = ++j) {
                  item = resv[i];
                  if ((item.fav_id_id != null) && item.fav_id_id !== "") {
                    all_fav_id_ids.push(item.fav_id_id);
                  }
                }
              }
              $A().lrucache().massRemove(JSON.stringify(all_fav_id_ids));
              $A().lrucache().massRemove(JSON.stringify(v_fav_id["index"]));
              delete fav_id_arr["" + fav_id];
              $A().lrucache().set({
                key: "fav_id_arr",
                value: JSON.stringify(fav_id_arr)
              });
              return $A().lrucache().get("column_arr").then(function(data) {
                var column_arr, column_delete_keys, k, len1, ref;
                column_arr = {};
                column_arr = (data != null) && data !== "" ? JSON.parse(data) : {};
                column_delete_keys = [];
                ref = column_arr[fav_id];
                for (k = 0, len1 = ref.length; k < len1; k++) {
                  item = ref[k];
                  column_delete_keys.push("column_" + item.key + "_" + fav_id);
                }
                if (column_delete_keys.length > 0) {
                  $A().lrucache().massRemove(JSON.stringify(column_delete_keys));
                }
                delete column_arr["" + fav_id];
                return $A().lrucache().set({
                  key: "column_arr",
                  value: JSON.stringify(column_arr)
                });
              });
            });
            return;
          }
        }
      });
    };

    return ECpageClass;

  })();

  new ECpageClass("page_course_info");

}).call(this);
